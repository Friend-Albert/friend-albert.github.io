<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java教程 - 分类 - FriendA&#39;s Blog</title>
        <link>https://friend-albert.github.io/categories/java%E6%95%99%E7%A8%8B/</link>
        <description>Java教程 - 分类 - FriendA&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 02 Aug 2022 15:21:02 &#43;0800</lastBuildDate><atom:link href="https://friend-albert.github.io/categories/java%E6%95%99%E7%A8%8B/" rel="self" type="application/rss+xml" /><item>
    <title>Java_泛型</title>
    <link>https://friend-albert.github.io/posts/java_%E6%B3%9B%E5%9E%8B/</link>
    <pubDate>Tue, 02 Aug 2022 15:21:02 &#43;0800</pubDate><guid>https://friend-albert.github.io/posts/java_%E6%B3%9B%E5%9E%8B/</guid>
    <description><![CDATA[泛型 1.使用泛型 使用泛型时，把泛型参数&lt;T&gt;替换为需要的class类型，例如：ArrayList&lt;String&gt;，A]]></description>
</item>
<item>
    <title>Java_注解</title>
    <link>https://friend-albert.github.io/posts/java_%E6%B3%A8%E8%A7%A3/</link>
    <pubDate>Sat, 30 Jul 2022 23:00:02 &#43;0800</pubDate><guid>https://friend-albert.github.io/posts/java_%E6%B3%A8%E8%A7%A3/</guid>
    <description><![CDATA[java_注解 1. 使用注解 什么是注解（Annotation）？注解是放在Java源码的类、方法、字段、参数前的一种特殊“注释” 注解的作用 从JV]]></description>
</item>
<item>
    <title>Java_反射</title>
    <link>https://friend-albert.github.io/posts/java_%E5%8F%8D%E5%B0%84/</link>
    <pubDate>Fri, 29 Jul 2022 21:51:12 &#43;0800</pubDate><guid>https://friend-albert.github.io/posts/java_%E5%8F%8D%E5%B0%84/</guid>
    <description><![CDATA[反射 什么是反射？ 反射就是Reflection，Java的反射是指程序在运行期可以拿到一个对象的所有信息。 正常情况下，如果我们要调用一个对象的]]></description>
</item>
<item>
    <title>Java_核心类</title>
    <link>https://friend-albert.github.io/posts/java_%E6%A0%B8%E5%BF%83%E7%B1%BB/</link>
    <pubDate>Tue, 26 Jul 2022 18:42:02 &#43;0800</pubDate><guid>https://friend-albert.github.io/posts/java_%E6%A0%B8%E5%BF%83%E7%B1%BB/</guid>
    <description><![CDATA[Java核心类 1.字符串和编码 字符串比较 当我们想要比较两个字符串是否相同时，要特别注意，我们实际上是想比较字符串的内容是否相同。必须使用eq]]></description>
</item>
<item>
    <title>Java_异常</title>
    <link>https://friend-albert.github.io/posts/java_%E5%BC%82%E5%B8%B8/</link>
    <pubDate>Mon, 25 Jul 2022 23:11:02 &#43;0800</pubDate><guid>https://friend-albert.github.io/posts/java_%E5%BC%82%E5%B8%B8/</guid>
    <description><![CDATA[Java 异常 1.java的异常体系 因为Java的异常是class，它的继承关系如下： ┌───────────┐ │ Object │ └───────────┘ ▲ │]]></description>
</item>
<item>
    <title>Java_OOP</title>
    <link>https://friend-albert.github.io/posts/java_oop/</link>
    <pubDate>Fri, 15 Jul 2022 21:11:02 &#43;0800</pubDate><guid>https://friend-albert.github.io/posts/java_oop/</guid>
    <description><![CDATA[Java 面向对象笔记 1.继承 1.1基础 Java使用extends关键字来实现继承 注意：子类自动获得了父类的所有字段，严禁定义与父类重名的字段！ 1.2 继]]></description>
</item>
</channel>
</rss>
